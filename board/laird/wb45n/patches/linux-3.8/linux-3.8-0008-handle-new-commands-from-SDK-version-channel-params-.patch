From 7e04b923d9af659bbee726ce9071ff858258dec1 Mon Sep 17 00:00:00 2001
From: Eric Bentley <eric.bentley@lairdtech.com>
Date: Wed, 10 Jul 2013 07:08:59 -0400
Subject: [PATCH] handle new commands from SDK: version, channel params,
 powersave

---
 drivers/net/wireless/ath/ath6kl/wmi.c |  133 ++++++++++++++++++++++++++++++++-
 1 file changed, 131 insertions(+), 2 deletions(-)

diff --git a/drivers/net/wireless/ath/ath6kl/wmi.c b/drivers/net/wireless/ath/ath6kl/wmi.c
index d685cb8..962ebda 100644
--- a/drivers/net/wireless/ath/ath6kl/wmi.c
+++ b/drivers/net/wireless/ath/ath6kl/wmi.c
@@ -4157,6 +4157,9 @@ enum {
 	ATHEROS_CMD_TEST_ECHO,
 	ATHEROS_CMD_EVENT,
 	ATHEROS_CMD_SET_LOW_RSSI_PARAMS,
+	ATHEROS_CMD_GET_VERSION,
+	ATHEROS_CMD_SET_CHANNEL_PARAMS,
+	ATHEROS_CMD_SET_POWER_SAVE,
 	__ATHEROS_CMD_MAX,
 };
 #define ATHEROS_CMD_MAX (__ATHEROS_CMD_MAX - 1)
@@ -4165,7 +4168,115 @@ static struct genl_multicast_group atheros_events_mcgrp = {
 	.name = "events",
 };
 
-struct wmi *gwmi = NULL;  // ugly hack to get access to wmi pointer for netlink entry point functions  FIXME: find alternative to this global!
+static struct wmi *gwmi = NULL;  // get access to wmi pointer for netlink entry point functions  FIXME: find alternative to this global!
+
+int ath6kl_genl_set_power_save (struct sk_buff *skb_2, struct genl_info *info)
+{
+	return 0;
+}
+
+int ath6kl_genl_set_channel_params (struct sk_buff *skb_2, struct genl_info *info)
+{
+	struct nlattr *na;
+	struct sk_buff *skb;
+	struct ath6kl *ar;  
+	struct wmi *wmi = gwmi;
+
+	typedef struct {
+	    u8     reserved1;
+	    u8     scanParam;              /* set if enable scan */
+	    u8     phyMode;                /* see WMI_PHY_MODE */
+	    u8     numChannels;            /* how many channels follow */
+	    u16    channelList[1];         /* channels in Mhz */
+	} WMI_CHANNEL_PARAMS_CMD;
+
+	WMI_CHANNEL_PARAMS_CMD *params;
+	WMI_CHANNEL_PARAMS_CMD *cmd;
+	if ( gwmi == NULL )
+		return 0;
+
+	ar = wmi->parent_dev;
+		
+	if (info == NULL)
+	{
+		printk("%s: no data received\n", __func__);
+    	return 0;
+	}
+
+	/*for each attribute there is an index in info->attrs which points to a nlattr structure
+     *in this structure the data is given
+     */
+	na = info->attrs[ATHEROS_ATTR_MSG];
+    
+	if (na) {
+		params = (WMI_CHANNEL_PARAMS_CMD*)nla_data(na);
+		if (params == NULL)
+			printk("error while receiving data\n");
+		else
+		{
+#if 0
+			printk("received:\n\phyMode: %d\n", params->phyMode);
+#endif
+
+			skb = ath6kl_wmi_get_new_buf(sizeof(*cmd));
+			if (!skb)
+				return -ENOMEM;
+
+			cmd = (WMI_CHANNEL_PARAMS_CMD *) skb->data;
+
+			memset(cmd, 0, sizeof(*cmd));
+			cmd->phyMode = params->phyMode;
+			// number of channels == 0 means use default channels which is what we want
+
+			ath6kl_wmi_cmd_send(wmi, 0, skb, WMI_SET_CHANNEL_PARAMS_CMDID,
+					    NO_SYNC_WMIFLAG);
+			
+		}
+	}
+	else
+		printk("%s: no info->attrs %i\n", __func__, ATHEROS_ATTR_MSG);
+
+	return 0;
+}
+
+int ath6kl_genl_get_version (struct sk_buff *skb_2, struct genl_info *info)
+{
+	struct sk_buff *skb;
+	int rc;
+	void *msg_head;
+	/* send a message back*/
+	/* allocate some memory, since the size is not yet known use NLMSG_GOODSIZE*/	
+	skb = genlmsg_new(NLMSG_GOODSIZE, GFP_KERNEL);
+	if (skb == NULL)
+		goto out;
+
+	msg_head = genlmsg_put(skb, 0, info->snd_seq+1, &atheros_fam, 0, ATHEROS_CMD_TEST_ECHO);
+	if (msg_head == NULL) {
+		rc = -ENOMEM;
+		goto out;
+	}
+	
+	/* add a ATHEROS_ATTR_MSG attribute (actual value to be sent) */
+#define LAIRD_DRV_VERSION 0x03040001
+	rc = nla_put_s32( skb, ATHEROS_ATTR_MSG, LAIRD_DRV_VERSION );
+	if (rc != 0)
+		goto out;
+	
+	/* finalize the message */
+	genlmsg_end(skb, msg_head);
+
+   	/* send the message back */
+	rc = genlmsg_unicast(genl_info_net(info), skb, info->snd_portid);
+	if (rc != 0)
+		goto out;
+	return 0;
+
+ 	out:
+    	ath6kl_err("an error occured in %s\n", __func__);
+  
+	return 0;
+
+}
 
 int ath6kl_genl_set_low_rssi_params (struct sk_buff *skb_2, struct genl_info *info)
 {
@@ -4344,7 +4455,25 @@ struct genl_ops atheros_ops[] = {
 		.policy = atheros_policy,
 		.doit = ath6kl_genl_set_low_rssi_params,
 		.dumpit = NULL,
-	}
+	}, {
+		.cmd = ATHEROS_CMD_GET_VERSION,
+		.flags = 0,
+		.policy = atheros_policy,
+		.doit = ath6kl_genl_get_version,
+		.dumpit = NULL,
+	}, {
+		.cmd = ATHEROS_CMD_SET_CHANNEL_PARAMS,
+		.flags = 0,
+		.policy = atheros_policy,
+		.doit = ath6kl_genl_set_channel_params,
+		.dumpit = NULL,
+	}, {
+		.cmd = ATHEROS_CMD_SET_POWER_SAVE,
+		.flags = 0,
+		.policy = atheros_policy,
+		.doit = ath6kl_genl_set_power_save,
+		.dumpit = NULL,
+	}, 
 };
 
 int ath6kl_genl_init(void) 
-- 
1.7.9.5

