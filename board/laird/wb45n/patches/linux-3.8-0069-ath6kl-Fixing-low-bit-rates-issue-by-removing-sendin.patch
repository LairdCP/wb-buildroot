From 52e5bf192c235599aef7bc38bd3763f8f09bec9b Mon Sep 17 00:00:00 2001
From: Dan Kephart <dan.kephart@lairdtech.com>
Date: Thu, 29 May 2014 20:03:37 -0400
Subject: [PATCH] ath6kl: Fixing low bit rates issue by removing sending of
 SET_TX_SELECT_RATES to firmware

Sending WMI_SET_TX_SELECT_RATES_CMDID to the firmware is causing it to
use the lowest bitrate available when connected.  Removing it solves that
issue.

BUG 5587
---
 drivers/net/wireless/ath/ath6kl/core.c | 1 -
 drivers/net/wireless/ath/ath6kl/core.h | 1 -
 drivers/net/wireless/ath/ath6kl/wmi.c  | 8 --------
 3 files changed, 10 deletions(-)

diff --git a/drivers/net/wireless/ath/ath6kl/core.c b/drivers/net/wireless/ath/ath6kl/core.c
index 6a53068..a594292 100644
--- a/drivers/net/wireless/ath/ath6kl/core.c
+++ b/drivers/net/wireless/ath/ath6kl/core.c
@@ -308,7 +308,6 @@ struct ath6kl *ath6kl_core_create(struct device *dev)
 	ar->laird.phy_mode = 0;  //init to zero (invalid) so we can tell if we receive a mode later
 	ar->laird.num_channels = 0;
 	memset(ar->laird.channel_list, 0, sizeof(u16) * WMI_MAX_CHANNELS);
-	memset(&(ar->laird.rates64), 0, sizeof(struct wmi_set_tx_select_rates64_cmd));
 	memset(&(ar->laird.htcap_params_2ghz), 0, sizeof(struct wmi_set_htcap_cmd));
 	memset(&(ar->laird.htcap_params_5ghz), 0, sizeof(struct wmi_set_htcap_cmd));
 
diff --git a/drivers/net/wireless/ath/ath6kl/core.h b/drivers/net/wireless/ath/ath6kl/core.h
index a1418b7..d6b1025 100644
--- a/drivers/net/wireless/ath/ath6kl/core.h
+++ b/drivers/net/wireless/ath/ath6kl/core.h
@@ -849,7 +849,6 @@ struct ath6kl {
 		enum wmi_phy_mode phy_mode;	 		
 		u8 num_channels;
 		u16 channel_list[WMI_MAX_CHANNELS];
-		struct wmi_set_tx_select_rates64_cmd rates64;
 		struct wmi_set_htcap_cmd htcap_params_2ghz;
 		struct wmi_set_htcap_cmd htcap_params_5ghz;
 		char AP_Name[17];
diff --git a/drivers/net/wireless/ath/ath6kl/wmi.c b/drivers/net/wireless/ath/ath6kl/wmi.c
index b127c77..475cc7d 100644
--- a/drivers/net/wireless/ath/ath6kl/wmi.c
+++ b/drivers/net/wireless/ath/ath6kl/wmi.c
@@ -4283,8 +4283,6 @@ void ath6kl_wmi_send_radio_mode(struct wmi *wmi, u8 if_idx)
 	if(ar->laird.phy_mode == 0)
 		return;
 
-	ath6kl_wmi_send_buf_cmd(wmi, if_idx, WMI_SET_TX_SELECT_RATES_CMDID,
-							sizeof(struct wmi_set_tx_select_rates64_cmd), (u8*)&(ar->laird.rates64));
 	ath6kl_wmi_send_buf_cmd(wmi, if_idx, WMI_SET_HT_CAP_CMDID, sizeof(struct wmi_set_htcap_cmd),
 							(u8*)&(ar->laird.htcap_params_2ghz));
 	ath6kl_wmi_send_buf_cmd(wmi, if_idx, WMI_SET_HT_CAP_CMDID, sizeof(struct wmi_set_htcap_cmd),
@@ -4384,12 +4382,6 @@ static int ath6kl_genl_wmi_passthru (struct sk_buff *skb_2, struct genl_info *in
 					ar->lrssi_roam_threshold = t->lrssi_roam_threshold; // place holder 
 					}
 					break;
-				case WMI_SET_TX_SELECT_RATES_CMDID:
-					{
-					struct wmi_set_tx_select_rates64_cmd *rates = (struct wmi_set_tx_select_rates64_cmd*)p;
-					memcpy(&ar->laird.rates64, rates, sizeof(struct wmi_set_tx_select_rates64_cmd));
-					}
-					break;
 				case WMI_SET_HT_CAP_CMDID:
 					{
 					struct wmi_set_htcap_cmd *htcap = (struct wmi_set_htcap_cmd*)p;
-- 
1.8.3.2

