From 53247b5ed1abdfb24f1f2d4d0fc41347e216ee2a Mon Sep 17 00:00:00 2001
From: Dan Kephart <dan.kephart@lairdtech.com>
Date: Tue, 3 Feb 2015 14:35:10 -0500
Subject: [PATCH] laird: cfg80211: allow bridging to work with wireless drivers

By default, bridging is not supported on devices the rely on cfg80211.
With the addition of arpnat, we do support bridging on such devices.
So removing all code the blocks bridging a cfg80211 device.

Bug: 6690
---
 net/wireless/core.c    | 3 +--
 net/wireless/nl80211.c | 2 --
 net/wireless/util.c    | 8 ++------
 3 files changed, 3 insertions(+), 10 deletions(-)

diff --git a/net/wireless/core.c b/net/wireless/core.c
index 8f0bac7e03c4..546aa2323669 100644
--- a/net/wireless/core.c
+++ b/net/wireless/core.c
@@ -1027,8 +1027,7 @@ static int cfg80211_netdev_notifier_call(struct notifier_block *nb,
 		/* allow mac80211 to determine the timeout */
 		wdev->ps_timeout = -1;
 
-		if ((wdev->iftype == NL80211_IFTYPE_STATION ||
-		     wdev->iftype == NL80211_IFTYPE_P2P_CLIENT ||
+		if ((wdev->iftype == NL80211_IFTYPE_P2P_CLIENT ||
 		     wdev->iftype == NL80211_IFTYPE_ADHOC) && !wdev->use_4addr)
 			dev->priv_flags |= IFF_DONT_BRIDGE;
 		break;
diff --git a/net/wireless/nl80211.c b/net/wireless/nl80211.c
index bf65f31bd55e..6770445e7fea 100644
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -2536,8 +2536,6 @@ static int nl80211_valid_4addr(struct cfg80211_registered_device *rdev,
 			       enum nl80211_iftype iftype)
 {
 	if (!use_4addr) {
-		if (netdev && (netdev->priv_flags & IFF_BRIDGE_PORT))
-			return -EBUSY;
 		return 0;
 	}
 
diff --git a/net/wireless/util.c b/net/wireless/util.c
index baf7218cec15..89edad00ddc6 100644
--- a/net/wireless/util.c
+++ b/net/wireless/util.c
@@ -938,10 +938,9 @@ int cfg80211_change_iface(struct cfg80211_registered_device *rdev,
 	    !(rdev->wiphy.interface_modes & (1 << ntype)))
 		return -EOPNOTSUPP;
 
-	/* if it's part of a bridge, reject changing type to station/ibss */
+	/* if it's part of a bridge, reject changing type to ibss */
 	if ((dev->priv_flags & IFF_BRIDGE_PORT) &&
 	    (ntype == NL80211_IFTYPE_ADHOC ||
-	     ntype == NL80211_IFTYPE_STATION ||
 	     ntype == NL80211_IFTYPE_P2P_CLIENT))
 		return -EBUSY;
 
@@ -986,15 +985,12 @@ int cfg80211_change_iface(struct cfg80211_registered_device *rdev,
 	if (!err) {
 		dev->priv_flags &= ~IFF_DONT_BRIDGE;
 		switch (ntype) {
-		case NL80211_IFTYPE_STATION:
-			if (dev->ieee80211_ptr->use_4addr)
-				break;
-			/* fall through */
 		case NL80211_IFTYPE_OCB:
 		case NL80211_IFTYPE_P2P_CLIENT:
 		case NL80211_IFTYPE_ADHOC:
 			dev->priv_flags |= IFF_DONT_BRIDGE;
 			break;
+		case NL80211_IFTYPE_STATION:
 		case NL80211_IFTYPE_P2P_GO:
 		case NL80211_IFTYPE_AP:
 		case NL80211_IFTYPE_AP_VLAN:
-- 
2.11.0

