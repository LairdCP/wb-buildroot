From 030da8dc6a2abe98de7275bf7daac5f1091ac6e3 Mon Sep 17 00:00:00 2001
From: Joe Conley <joe.conley@lairdtech.com>
Date: Fri, 6 May 2016 13:09:41 -0400
Subject: [PATCH] laird: netfilter: conntrack: Remove ctnetlink_alloc_filter
 helper function to simplify #ifdefs

Having ctnetlink_alloc_filter return -EOPNOTSUPP is currently pointless
because the only two functions that call it are already inside the same #ifdef
Building the kernel with CONFIG_NF_CONNTRACK_MARK
disabled will no longer cause an unused function warning.

bug 9242
---
 net/netfilter/nf_conntrack_netlink.c | 37 ++++++++++++++++--------------------
 1 file changed, 16 insertions(+), 21 deletions(-)

diff --git a/net/netfilter/nf_conntrack_netlink.c b/net/netfilter/nf_conntrack_netlink.c
index 7aef6dcffbf8..e6c671cc798b 100644
--- a/net/netfilter/nf_conntrack_netlink.c
+++ b/net/netfilter/nf_conntrack_netlink.c
@@ -788,25 +788,6 @@ struct ctnetlink_filter {
 	} mark;
 };
 
-static struct ctnetlink_filter *
-ctnetlink_alloc_filter(const struct nlattr * const cda[])
-{
-#ifdef CONFIG_NF_CONNTRACK_MARK
-	struct ctnetlink_filter *filter;
-
-	filter = kzalloc(sizeof(*filter), GFP_KERNEL);
-	if (filter == NULL)
-		return ERR_PTR(-ENOMEM);
-
-	filter->mark.val = ntohl(nla_get_be32(cda[CTA_MARK]));
-	filter->mark.mask = ntohl(nla_get_be32(cda[CTA_MARK_MASK]));
-
-	return filter;
-#else
-	return ERR_PTR(-EOPNOTSUPP);
-#endif
-}
-
 static int ctnetlink_filter_match(struct nf_conn *ct, void *data)
 {
 	struct ctnetlink_filter *filter = data;
@@ -1101,7 +1082,14 @@ static int ctnetlink_flush_conntrack(struct net *net,
 	struct ctnetlink_filter *filter = NULL;
 #ifdef CONFIG_NF_CONNTRACK_MARK
 	if (cda[CTA_MARK] && cda[CTA_MARK_MASK]) {
-		filter = ctnetlink_alloc_filter(cda);
+		filter = kzalloc(sizeof(*filter), GFP_KERNEL);
+
+		if (filter == NULL)
+			return -ENOMEM;
+
+		filter->mark.val = ntohl(nla_get_be32(cda[CTA_MARK]));
+		filter->mark.mask = ntohl(nla_get_be32(cda[CTA_MARK_MASK]));
+
 		if (IS_ERR(filter))
 			return PTR_ERR(filter);
 	}
@@ -1192,7 +1180,14 @@ ctnetlink_get_conntrack(struct sock *ctnl, struct sk_buff *skb,
 		if (cda[CTA_MARK] && cda[CTA_MARK_MASK]) {
 			struct ctnetlink_filter *filter;
 
-			filter = ctnetlink_alloc_filter(cda);
+			filter = kzalloc(sizeof(*filter), GFP_KERNEL);
+
+			if (filter == NULL)
+				return -ENOMEM;
+
+			filter->mark.val = ntohl(nla_get_be32(cda[CTA_MARK]));
+			filter->mark.mask = ntohl(nla_get_be32(cda[CTA_MARK_MASK]));
+
 			if (IS_ERR(filter))
 				return PTR_ERR(filter);
 
-- 
2.11.0

