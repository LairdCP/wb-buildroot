From 2960159d6404c9e8b3e4192e1273ad5beba47ee1 Mon Sep 17 00:00:00 2001
From: Wenyou Yang <wenyou.yang@atmel.com>
Date: Mon, 2 Feb 2015 12:05:40 +0800
Subject: [PATCH] driver: rstc: add the external rset support

On the sama5d3x_cmp board, a phy is not in the proper reset state
after power-up, so the additional reset is added to make sure
the phy reset successfully.

Signed-off-by: Wenyou Yang <wenyou.yang@atmel.com>
---
 driver/at91_rstc.c       | 42 +++++++++++++++++++++++++++++++++++++-----
 driver/driver.mk         |  2 +-
 driver/pmc.c             |  9 +++++++++
 include/arch/at91_rstc.h | 10 ++++++----
 include/rstc.h           |  2 ++
 5 files changed, 55 insertions(+), 10 deletions(-)

diff --git a/driver/at91_rstc.c b/driver/at91_rstc.c
index 23f57c6..f93b5d0 100644
--- a/driver/at91_rstc.c
+++ b/driver/at91_rstc.c
@@ -2,7 +2,7 @@
  *         ATMEL Microcontroller Software Support
  * ----------------------------------------------------------------------------
  * Copyright (c) 2013, Atmel Corporation
-
+ *
  * All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
@@ -25,17 +25,49 @@
  * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
-
 #include "common.h"
 #include "hardware.h"
 #include "rstc.h"
 #include "arch/at91_rstc.h"
 
+static inline void rstc_write(unsigned int offset, unsigned int value)
+{
+	writel(value, AT91C_BASE_RSTC + offset);
+}
+
+static inline unsigned int rstc_read(unsigned int offset)
+{
+	return readl(AT91C_BASE_RSTC + offset);
+}
+
+/*
+ * The external reset is asserted during a time of 2^(ERSTL+1) Slow Clock cycles
+ * the external reset length is 15ms (1/32768 * (2 ^ 9).
+ */
+#define EXTERNAL_RESET_LENGTH	8
+
+void rstc_external_reset(void)
+{
+	unsigned int timeout = 100000;
+
+	/* Set the external reset length */
+	rstc_write(RSTC_RMR, AT91C_RSTC_ERSTL(EXTERNAL_RESET_LENGTH)
+					| AT91C_RSTC_KEY_UNLOCK);
+
+	/* Assert the NRST pin */
+	rstc_write(RSTC_RCR, (AT91C_RSTC_EXTRST | AT91C_RSTC_RCRKEY));
+
+	/* Wait for the software reset completed */
+	while(rstc_read(RSTC_RSR) & AT91C_RSTC_SRCMP);
+
+	while (--timeout)
+		;
+}
+
 void cpu_reset()
 {
-	writel(AT91C_RSTC_KEY_UNLOCK
+	rstc_write(RSTC_RCR, AT91C_RSTC_RCRKEY
 		| AT91C_RSTC_PROCRST	/* Processor Reset */
 		| AT91C_RSTC_PERRST	/* Peripheral Reset */
-		| AT91C_RSTC_EXTRST	/* External Reset (assert nRST pin) */
-		, AT91C_BASE_RSTC + RSTC_RCR);
+		| AT91C_RSTC_EXTRST);	/* External Reset (assert nRST pin) */
 }
diff --git a/driver/driver.mk b/driver/driver.mk
index 232094f..ab6497b 100644
--- a/driver/driver.mk
+++ b/driver/driver.mk
@@ -13,6 +13,7 @@ COBJS-y				+= $(DRIVERS_SRC)/pmc.o
 COBJS-y				+= $(DRIVERS_SRC)/at91_pit.o
 COBJS-y				+= $(DRIVERS_SRC)/at91_wdt.o
 COBJS-y				+= $(DRIVERS_SRC)/at91_usart.o
+COBJS-y				+= $(DRIVERS_SRC)/at91_rstc.o
 
 COBJS-$(CONFIG_USER_HW_INIT)	+= $(DRIVERS_SRC)/hw_init_hook.o
 
@@ -47,7 +48,6 @@ COBJS-$(CONFIG_ENTER_NWD)	+= $(DRIVERS_SRC)/svc_handler.o
 COBJS-$(CONFIG_ENTER_NWD)	+= $(DRIVERS_SRC)/svc_mgr.o
 COBJS-$(CONFIG_ENTER_NWD)	+= $(DRIVERS_SRC)/lp310_l2cc.o
 COBJS-$(CONFIG_ENTER_NWD)	+= $(DRIVERS_SRC)/monitor/mon_init.o
-COBJS-$(CONFIG_ENTER_NWD)	+= $(DRIVERS_SRC)/at91_rstc.o
 COBJS-$(CONFIG_ENTER_NWD)	+= $(DRIVERS_SRC)/monitor/mon_switch.o
 COBJS-$(CONFIG_ENTER_NWD)	+= $(DRIVERS_SRC)/monitor/mon_vectors.o
 
diff --git a/driver/pmc.c b/driver/pmc.c
index a6dcd38..6432a9d 100644
--- a/driver/pmc.c
+++ b/driver/pmc.c
@@ -28,6 +28,7 @@
 #include "hardware.h"
 #include "timer.h"
 #include "arch/at91_pmc.h"
+#include "rstc.h"
 
 static inline void write_pmc(unsigned int offset, const unsigned int value)
 {
@@ -44,6 +45,14 @@ void lowlevel_clock_init()
 	unsigned long tmp;
 	unsigned int times;
 
+#if defined(CONFIG_SAMA5D3X_CMP)
+	/*
+	 * On the sama5d3x_cmp board, a phy is not in the proper reset state
+	 * after power-up, additional reset
+	 */
+	rstc_external_reset();
+#endif
+
 #if defined(AT91SAM9X5) || defined(AT91SAM9N12) || defined(SAMA5D3X) || defined(SAMA5D4)
 	/*
 	 * Enable the 12MHz oscillator
diff --git a/include/arch/at91_rstc.h b/include/arch/at91_rstc.h
index 2233a12..a145a75 100644
--- a/include/arch/at91_rstc.h
+++ b/include/arch/at91_rstc.h
@@ -39,7 +39,8 @@
 #define AT91C_RSTC_ICERST	(0x1UL << 1)
 #define AT91C_RSTC_PERRST	(0x1UL << 2)
 #define AT91C_RSTC_EXTRST	(0x1UL << 3)
-#define AT91C_RSTC_KEY		(0xFFUL << 24)
+#define AT91C_RSTC_RCRKEY_MASK	(0xFFUL << 24)
+#define 	AT91C_RSTC_RCRKEY	(0xA5UL << 24)
 
 /* -------- RSTC_RSR : (RSTC Offset: 0x4) Reset Status Register --------*/ 
 #define AT91C_RSTC_URSTS	(0x1UL << 0)
@@ -55,8 +56,9 @@
 /* -------- RSTC_RMR : (RSTC Offset: 0x8) Reset Mode Register --------*/ 
 #define AT91C_RSTC_URSTEN	(0x1UL << 0)
 #define AT91C_RSTC_URSTIEN	(0x1UL << 4)
-#define AT91C_RSTC_ERSTL	(0xFUL << 8)
-#define AT91C_RSTC_RMRKEY	(0xFFUL <<24)
-#define AT91C_RSTC_KEY_UNLOCK	(0xA5UL <<24)
+#define AT91C_RSTC_ERSTL_MASK	(0xFUL << 8)
+#define AT91C_RSTC_ERSTL(x)	((x) & AT91C_RSTC_ERSTL_MASK << 8)
+#define AT91C_RSTC_RMRKEY_MASK	(0xFFUL << 24)
+#define		AT91C_RSTC_KEY_UNLOCK		(0xA5UL << 24)
 
 #endif /* #ifndef __AT91_RSTC_H__ */
diff --git a/include/rstc.h b/include/rstc.h
index fcf7ac6..9ee0540 100644
--- a/include/rstc.h
+++ b/include/rstc.h
@@ -30,4 +30,6 @@
 
 extern void cpu_reset(void);
 
+extern void rstc_external_reset(void);
+
 #endif	/* #ifndef __RSTC_H__ */
-- 
1.9.1

