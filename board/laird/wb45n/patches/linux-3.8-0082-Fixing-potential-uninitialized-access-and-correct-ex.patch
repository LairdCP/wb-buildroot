From cbe56bc2f7ec19c2320a4eff9be7a3270e880f65 Mon Sep 17 00:00:00 2001
From: Dan Kephart <dan.kephart@lairdtech.com>
Date: Fri, 15 Aug 2014 18:14:45 -0400
Subject: [PATCH] Fixing potential uninitialized access and correct exit on
 nl_put error

Initializing msg and hdr pointers to NULL to avoid potential uninitialized
read crash.  Also, checking return on nla_put_u32 since it isn't the macro
version that automatically does the check and jumps to nla_put_failure.

BUG: 5157
RN: n/a
---
 drivers/net/wireless/ath/ath6kl/wmi.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/drivers/net/wireless/ath/ath6kl/wmi.c b/drivers/net/wireless/ath/ath6kl/wmi.c
index 03c05b6..ac825da 100644
--- a/drivers/net/wireless/ath/ath6kl/wmi.c
+++ b/drivers/net/wireless/ath/ath6kl/wmi.c
@@ -4558,8 +4558,8 @@ nla_put_failure:
 
 void ath6kl_drv_event_multicast(enum atheros_cmd_id cmd_id, unsigned int reason)
 {
-	struct sk_buff *msg;
-	void *hdr;
+	struct sk_buff *msg = NULL;
+	void *hdr = NULL;
 
 	msg = genlmsg_new(NLMSG_DEFAULT_SIZE, GFP_KERNEL);
 	if (msg)
@@ -4567,7 +4567,8 @@ void ath6kl_drv_event_multicast(enum atheros_cmd_id cmd_id, unsigned int reason)
 	if (!hdr)
 		nlmsg_free(msg);
 	else {
-		nla_put_u32(msg, ATHEROS_ATTR_MSG, reason);
+		if(nla_put_u32(msg, ATHEROS_ATTR_MSG, reason))
+			goto nla_put_failure;
 		genlmsg_end(msg, hdr);
 		genlmsg_multicast(msg, 0, atheros_events_mcgrp.id, GFP_KERNEL);
 	}
-- 
1.8.3.2

