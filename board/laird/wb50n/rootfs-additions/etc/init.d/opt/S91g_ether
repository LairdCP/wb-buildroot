#!/bin/sh

# Copyright (c) 2015, Laird
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.
#
# contact: ews-support@lairdtech.com

# g_ether - init for wb50n
#
# This init only loads/unloads the hw-phy gadget driver for a USB interface.
# Configuration is handled via helpers in /etc/network. See the /e/n/i file.


iface=usb0

await_interface() {
  # args: <class/iface> [<milliseconds> [{up|down}]]
  let n=0 w=${2:-0}
  while : wait increments of 10ms for address
  do
    { mac=; read -rs mac </sys/class/${1}/address; } 2>/dev/null
    test "${mac/??:??:??:??:??:??/up}" == "up" && break
    test "$3" == "down" && break
    test $n -lt $w && let n+=10 && usleep 9999 || break
  done
  test $n -ge 10 && echo -en "  ...waited ${n}ms${mac:+\n}${3:+\n}"
  test -n "$mac" && rv=0 || rv=1
  return $rv
}

start() {
  echo "Enabling USB gadget ethernet"
 
  modprobe atmel_usba_udc
  modprobe g_ether
  
  await_interface net/$iface 1200 up \
  || { echo "  Error: g_ether $iface n/a?"; return; }

  # store the dev_addr created by driver if not set
  if ! grep -sq 'dev_addr=' /etc/modprobe.d/g_ether.conf
  then
    echo "  storing g_ether randomized device address"
    echo "options g_ether dev_addr=$mac" >>/etc/modprobe.d/g_ether.conf
  fi

  ip link set dev $iface up
  rv=$?
}

stop() {
  echo "Disabling USB gadget ethernet"

  ip addr flush dev $iface 0.0.0.0 2>/dev/null \
  && ip link set dev $iface down

  await_interface net/$iface 600 down
 
  modprobe -r g_ether usb_f_ecm libcomposite atmel_usba_udc udc_core
  rv=$?
}

rv=1
case $1 in
  stop)
    stop
    ;;

  start)
    start
    ;;

  status)
    echo -n STATUS=
    ##
    ## note: cable/link detect change down|up may take awhile
    ##
    if await_interface net/$iface
    then
      grep -s . /sys/class/net/$iface/operstate
      grep -s . /sys/class/net/$iface/uevent
      echo MAC=$mac
    else
      echo n/a
    fi
    ;;

  restart)
    stop
    start
    ;;

  *)
    echo "Usage: $0 {stop|start|status|restart}"
    ;;
esac
exit $rv
