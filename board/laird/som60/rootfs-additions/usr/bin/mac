#!/bin/sh

MAC_ADDRESS_PARAM_LEN=17
fw_opt=
enable_write=false
writes="1 2"

usage()
{
	echo "usage: write: ${0##*/} [-nand] [-f] [-s] xx:xx:xx:xx:xx:xx|xxxxxxxxxxxx"
	echo "       read:  ${0##*/} [-nand]"
	echo "-nand - uses uboot environment blocks in NAND"
	echo "-f    - writes addresses into uboot environment
	echo "-s    - writes only once (programs only single block)
}

read_mac()
{
	fw_printenv ${fw_opt} -n "${1}"
}

print_macs()
{
	printf "Eth0: %s\n" "$(read_mac "ethaddr")"
	printf "Eth1: %s\n" "$(read_mac "eth1addr")"
}

write_macs()
{
	mac1="${1}"

	mac0_numeric="$(( 0x${mac1//:/} + 1 ))"
	mac0_format_string="$(printf "%012x" ${mac0_numeric} | sed 's/../&:/g;s/:$//')"
	mac0_hex="$(printf "${mac0_format_string}")"

	if "${enable_write}"; then
		for i in ${writes} ; do
			echo -e "ethaddr=${mac0_hex}\neth1addr=${mac1}\n" | fw_setenv ${fw_opt} -s -
		done
	else
		printf "simulate write Eth0: %s\n" "${mac0_hex}"
		printf "simulate write Eth1: %s\n" "${mac1}"
		printf "(specify -f to write)\n"
	fi
}

[ "${1}" = "-nand" ] && shift && fw_opt="-c /etc/fw_env_flash.config"
[ "${1}" = "-f" ] && shift && enable_write=true
[ "${1}" = "-s" ] && shift && writes="1"

[ "${#}" -eq "0" ] && print_macs && exit
[ "${#}" -ne "1" ] && usage && exit

# Support MAC address from bar code scanner (without ':'), production request
case "${1}" in
	*:*)
		MAC_ADDRESS="${1}"
		;;
	*)
		MAC_ADDRESS=$(echo "${1}" | sed 's/../&:/g;s/:$//')
		;;
esac

[ "${#MAC_ADDRESS}" -ne "${MAC_ADDRESS_PARAM_LEN}" ] && usage && exit

write_macs "${MAC_ADDRESS}"
print_macs
