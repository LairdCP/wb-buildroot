#!/bin/sh

MAC_ADDRESS_PARAM_LEN=17

. /etc/os-release
case "${ID}" in
*wbx3)
    fw_opt="-c /etc/fw_env_flash.config"
    ;;
*)
    fw_opt=
    ;;
esac

usage()
{
    echo "usage: write: ${0##*/} [-f] [xx:xx:xx:xx:xx:xx]"
    echo "       read: ${0##*/}"
}

read_mac()
{
    fw_printenv ${fw_opt} -n "${1}"
}

print_macs()
{
    printf "Eth0: %s\n" "$(read_mac "ethaddr")"
    printf "Eth1: %s\n" "$(read_mac "eth1addr")"
}

write_macs()
{
    mac1="${1}"
    enable_write="${2}"
    mac0_numeric="$(( 0x${mac1//:/} + 1 ))"
    mac0_format_string="$(printf "%012x" ${mac0_numeric} | sed 's/../&:/g;s/:$//')"
    mac0_hex="$(printf "${mac0_format_string}")"
    if "${enable_write}"; then
        fw_setenv ${fw_opt} ethaddr "${mac0_hex}"
        fw_setenv ${fw_opt} eth1addr "${mac1}"
    else
        printf "simulate write Eth0: %s\n" "${mac0_hex}"
        printf "simulate write Eth1: %s\n" "${mac1}"
        printf "(specify -f to write)\n"
    fi
}


enable_write=false

[ "${1}" = "-f" ] && shift && enable_write=true

[ "${#}" -eq "0" ] && print_macs && exit
[ "${#}" -ne "1" ] && usage && exit

MAC_ADDRESS="${1}"

[ "${#MAC_ADDRESS}" -ne "${MAC_ADDRESS_PARAM_LEN}" ] && usage && exit

write_macs "${MAC_ADDRESS}" ${enable_write}
print_macs
