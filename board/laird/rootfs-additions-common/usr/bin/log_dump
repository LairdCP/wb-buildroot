#!/bin/sh

# Copyright (c) 2015, Laird Connectivity
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.
#
# contact: support@lairdconnect.com

# /usr/bin/log_dump Support utility to gather logs for support to assist
# with issue debugging

# if your system does not support /bin/sh, you can modify the first line
# as appropriate for your system.

# MSD customers may wish to use a different location
LOGLOCALE=/tmp

LOGFILE=${LOGLOCALE}/log_dump.txt

LOG_DUMP_VERSION=20170705

command_exists () {
    command -v "$1" > /dev/null  2>&1;
}

command_exists echo
if [ $? -ne 0 ]; then
	echo >&2 "Echo is required.  Aborting."
	exit 1
fi

echo "creating $LOGFILE"
echo "= = = = = = = = = = = = = = = = = = = =" >> $LOGFILE
echo "log_dump file created with version " $LOG_DUMP_VERSION >> $LOGFILE
if command_exists date ; then
	date >> $LOGFILE;
fi

if command_exists uptime ; then
	echo "-----uptime-----" >> $LOGFILE
	uptime >> $LOGFILE
else
	echo "no uptime command" >> $LOGFILE
fi

if command_exists grep ; then
	if command_exists sed ; then
		x=$( grep -s 'Workgroup Bridge' /proc/device-tree/model \
		|| sed -n 's/Hardware[ \t:]*\(.*\)/\1/p' /proc/cpuinfo )
	fi
fi

echo "-----system-----" >> $LOGFILE
case "$x" in
	*'Workgroup Bridge'*)
	cat /etc/laird-release >> $LOGFILE
	wb=yes
	;;
	*)
	echo "MSD/SSD system" >> $LOGFILE
	wb=no
	;;
esac

if command_exists uname ; then
	echo "-----kernel info-----" >> $LOGFILE
	uname -a >> $LOGFILE
fi

echo "-----kernel cmd line-----" >> $LOGFILE
cat /proc/cmdline >> $LOGFILE

if [ "$wb" = "yes" ]; then
	echo "-----uboot env-----" >> $LOGFILE
	fw_printenv >> $LOGFILE
fi

sdc_cli exit > /dev/null 2>&1;
if [ $? -eq 0 ]; then
	sdc_cli >> $LOGFILE << \
	--sdc_cli_info--
	!echo "-----sdc_cli version-----" >> $LOGFILE
	version
	!echo "-----sdc_cli status-----" >> $LOGFILE
	status
	!echo "-----sdc_cli profile list-----" >> $LOGFILE
	profile list
	profile dumpall
	--sdc_cli_info--
fi

if command_exists nmcli ; then
	echo "-----nmcli-----" >> $LOGFILE
	nmcli >> $LOGFILE
	echo "-----nmcli version-----" >> $LOGFILE
	nmcli -v >> $LOGFILE
	echo "-----nmcli device status-----" >> $LOGFILE
	nmcli device status >> $LOGFILE
	echo "-----nmcli connection show-----" >> $LOGFILE
	nmcli connection show >> $LOGFILE
	for i in `ls /etc/NetworkManager/system-connections/`; do
		echo "-----system-connection $i-----" >> $LOGFILE
		nmcli con show $i >> $LOGFILE
	done
	echo "-----NetworkManager.conf-----" >> $LOGFILE
	cat /etc/NetworkManager/NetworkManager.conf >> $LOGFILE
fi

if grep -Fq "Workgroup Bridge 50N" /proc/device-tree/model
then
        FW_PATH=/lib/firmware/ath6k/AR6004/hw3.0
        FW_LINK=fw-5.bin
else
        echo "Unsupported platform"
        return 0
fi

	echo "-----Contents of ${FW_PATH}-----" >> $LOGFILE
if command_exists cut ; then
ls -ln ${FW_PATH} | cut -c1-11,35-100 >> $LOGFILE
else
ls -ln ${FW_PATH} >> $LOGFILE
fi
echo >> $LOGFILE
if command_exists readlink ; then
echo "Firmware:" >> $LOGFILE
cd $FW_PATH
n='[0-9]'
for x in fw_v*.bin
do
	label= [ "`readlink ${FW_LINK} 2>/dev/null`" == $x ] && label="${FW_LINK}"

if command_exists md5sum ; then
	echo -e "${label:-  -  }" \
	`grep -s -e "^QCA" -e "^$n\.$n\.$n\.$n" $x || echo "(unidentifable)"` \
	`md5sum $x 2>/dev/null` >> $LOGFILE
fi
done
fi

if [ "$wb" = "yes" ]; then
	ifrc > /dev/null 2>&1;
	if [ $? -eq 0 ]; then
		echo "-----ifrc -v wlan0-----" >> $LOGFILE
		ifrc -v wlan0 >> $LOGFILE
		echo "-----ifrc -v-----" >> $LOGFILE
		ifrc -v >> $LOGFILE
		echo "-----bridge staus------" >> $LOGFILE
		{ ifrc -v br0 && ifrc br0 status; } >> $LOGFILE
		echo "-----ifrc log-----" >> $LOGFILE
		cat /var/log/ifrc/wlan0 >> $LOGFILE
	fi
	echo "----image info-----" >> $LOGFILE
	fw_select --show >> $LOGFILE
	echo "-----ip addr-----" >> $LOGFILE
	ip addr >> $LOGFILE
	echo "-----route info-----" >> $LOGFILE
	ip route show >> $LOGFILE
fi

if command_exists top ; then
	echo "-----top-----" >> $LOGFILE
	top -b -n 1 >> $LOGFILE
fi

if command_exists df ; then
	echo "-----df-----" >> $LOGFILE
	df >> $LOGFILE
fi

if command_exists logread ; then
	echo "-----logread-----" >> $LOGFILE
	logread >> $LOGFILE
fi

if command_exists ps ; then
	echo "-----processes-----" >> $LOGFILE
	ps >> $LOGFILE
fi

if command_exists dmesg ; then
	echo "- - - - - - - - - - DMESG - - - - - - - - - - " >> $LOGFILE
	dmesg >> $LOGFILE
fi

echo "The file" $LOGFILE "was created.  Please provide this file to"
echo "your support contact at support@lairdconnect.com"

exit 0
