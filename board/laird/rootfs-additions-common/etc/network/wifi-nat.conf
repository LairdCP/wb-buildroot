# wifi-nat.conf - setup <iface> -to- wifi nat/masquerade
#
# handles directives: pre-dcfg-do and post-cfg-do
# jon.hefling@lairdtech.com

#env |grep IFRC_
act=$IFRC_ACTION
dev=$IFRC_DEVICE

# the <iface> is managed by ifrc, as set in /e/n/i file or via cli
test -n "$dev" || exit 1

case $act in
  
  u*) ## up - setup network policy
    ### pre-cfg-do ###
    echo "  ${0##*/}: configuring $dev for masquerade/nat on wlan0"
    
    # using an ifrc call here takes care of all details, as set in /e/n/i
    # the interface will be automatically started if not already
    ifrc wlan0 up
    
    # enable ip forwarding
    modprobe nf_conntrack_ipv4
    echo 1 > /proc/sys/net/ipv4/ip_forward
    
    # flush the ip tables
    iptables --flush
    iptables --table nat --flush
    iptables --delete-chain
    iptables --table nat --delete-chain

    # accept all traffic
    iptables -P INPUT ACCEPT
    iptables -P OUTPUT ACCEPT
    iptables -P FORWARD ACCEPT

    # setup nat firewall
    iptables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE
    iptables -A FORWARD -i $dev -o wlan0 -j ACCEPT
    iptables -A FORWARD -i wlan0 -o $dev -m state --state RELATED,ESTABLISHED -j ACCEPT
    ;;
    
  d*) ## down - cleanup things we configured earlier
    ### post-dcfg-do ###
    echo "  ${0##*/}: deconfiguring $dev"
    
    # flushing all rules (really we should just delete what we created)
    iptables -t nat -F
   
    # disable ip forwarding
    echo 0 > /proc/sys/net/ipv4/ip_forward
    modprobe --remove-dependencies nf_conntrack_ipv4
    ;;
esac 

exit 0
