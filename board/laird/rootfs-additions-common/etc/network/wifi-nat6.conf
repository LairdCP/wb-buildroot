# wifi-nat6.conf - setup <iface> -to- wifi nat/masquerade
#
# handles directives: pre-dcfg-do and post-cfg-do

#env |grep IFRC_
act=$IFRC_ACTION
dev=$IFRC_DEVICE

# the <iface> is managed by ifrc, as set in /e/n/i file or via cli
test -n "$dev" || exit 1

case $act in

  u*) ## up - setup network policy
    ### pre-cfg-do ###
    echo "  ${0##*/}: configuring $dev for masquerade/nat on wlan0"

    # enable ip forwarding
    modprobe nf_conntrack_ipv6
    echo 1 > /proc/sys/net/ipv6/conf/all/forwarding

    # disable forwarding on wlan0
    echo 0 > /proc/sys/net/ipv6/conf/wlan0/forwarding

    # accept router advertisements even if forwarding is enabled.
    echo 2 > /proc/sys/net/ipv6/conf/wlan0/accept_ra

    # flush the ip tables
    ip6tables --flush
    ip6tables --table nat --flush
    ip6tables --delete-chain
    ip6tables --table nat --delete-chain

    # accept all traffic
    ip6tables -P INPUT ACCEPT
    ip6tables -P OUTPUT ACCEPT
    ip6tables -P FORWARD ACCEPT

    ## setup nat firewall
    ip6tables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE
    ;;

  d*) ## down - cleanup things we configured earlier
    ### post-dcfg-do ###
    echo "  ${0##*/}: deconfiguring $dev"

    # flushing all rules (really we should just delete what we created)
    ip6tables -t nat -F

    # disable ip forwarding
    echo 0 > /proc/sys/net/ipv6/conf/all/forwarding
    echo 1 > /proc/sys/net/ipv6/conf/wlan0/accept_ra
    modprobe --remove-dependencies nf_conntrack_ipv6
    ;;
esac

exit 0
