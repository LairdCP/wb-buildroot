From 43b59c9bc5a8073f4170d152a10720c6df5e021f Mon Sep 17 00:00:00 2001
From: Stefano Babic <sbabic@denx.de>
Date: Wed, 15 Apr 2020 16:19:17 +0200
Subject: [PATCH] Replace own implementation of strlcpy with FreeBSD

This ensures to have a well established copy for this basic function.

Signed-off-by: Stefano Babic <sbabic@denx.de>
Reported-by: Michael Adler <michael.adler@siemens.com>
---
 core/util.c | 41 ++++++++++++++++++++++++++---------------
 1 file changed, 26 insertions(+), 15 deletions(-)

diff --git a/core/util.c b/core/util.c
index 0ed75ff03..35376f3d2 100644
--- a/core/util.c
+++ b/core/util.c
@@ -192,24 +192,35 @@ char *substring(const char *src, int first, int len) {
 }
 
 #if defined(__linux__)
+
+/*
+ * Copy string src to buffer dst of size dsize.  At most dsize-1
+ * chars will be copied.  Always NUL terminates (unless dsize == 0).
+ * Returns strlen(src); if retval >= dsize, truncation occurred.
+ */
 size_t
-strlcpy(char *dst, const char * src, size_t size)
+strlcpy(char * __restrict dst, const char * __restrict src, size_t dsize)
 {
+	const char *osrc = src;
+	size_t nleft = dsize;
+
+	/* Copy as many bytes as will fit. */
+	if (nleft != 0) {
+		while (--nleft != 0) {
+			if ((*dst++ = *src++) == '\0')
+				break;
+		}
+	}
+
+	/* Not enough room in dst, add NUL and traverse rest of src. */
+	if (nleft == 0) {
+		if (dsize != 0)
+			*dst = '\0';		/* NUL-terminate dst */
+		while (*src++)
+			;
+	}
 
-    size_t len = strlen(src);
-    /*
-     * src is null termintaed,
-     * copy the last '\0', too.
-     */
-    if (len < size) {
-        memcpy(dst, src, len + 1);
-    } else if (len) {
-	/* truncate string */
-        memcpy(dst, src, size - 1);
-	/* Add C string terminator */
-        dst[size - 1] = '\0';
-    }
-    return len;
+	return(src - osrc - 1);	/* count does not include NUL */
 }
 #endif
 
