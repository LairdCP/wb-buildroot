diff -Naur a/Kconfig b/Kconfig
--- a/Kconfig	2019-11-29 13:47:39.000000000 +0000
+++ b/Kconfig	2021-08-24 15:40:50.693139168 +0000
@@ -158,6 +158,10 @@
 	  but in some cases it can be required to do it. Having a check,
 	  the risky-component is not always updated.
 
+config FAIL_DOWNGRADE
+	bool "Fail update on downgrade attempt"
+	default n
+
 menu "Socket Paths"
 
 config SOCKET_CTRL_PATH
diff -Naur a/core/parser.c b/core/parser.c
--- a/core/parser.c	2021-08-24 16:33:51.157139168 +0000
+++ b/core/parser.c	2021-08-24 16:35:02.933139168 +0000
@@ -211,17 +211,20 @@
 /*
  * Remove the image if a higher version is already installed
  */
-static void remove_higher_image_list(struct imglist *img_list,
+static int remove_higher_image_list(struct imglist *img_list,
 				struct swver *sw_ver_list)
 {
 	struct img_type *img;
+	int n_removed = 0;
 
 	LIST_FOREACH(img, img_list, next) {
 		if (is_image_higher(sw_ver_list, img)) {
 			LIST_REMOVE(img, next);
 			free_image(img);
+			n_removed++;
 		}
 	}
+	return n_removed;
 }
 
 int parse(struct swupdate_cfg *sw, const char *descfile)
@@ -331,7 +334,13 @@
 
 	remove_installed_image_list(&sw->images, &sw->installed_sw_list);
 
-	remove_higher_image_list(&sw->images, &sw->installed_sw_list);
+	int n_removed = remove_higher_image_list(&sw->images, &sw->installed_sw_list);
+#ifdef CONFIG_FAIL_DOWNGRADE
+	if (n_removed > 0) {
+		ERROR("Failing update on downgrade attempt");
+		return -EPERM;
+	}
+#endif
 
 	/*
 	 * Compute the total number of installer
