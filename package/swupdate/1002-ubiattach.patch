--- a/corelib/mtd-interface.c	2021-12-08 09:17:17.000000000 
+++ b/corelib/mtd-interface.c	2022-03-28 10:48:42.000000000 
@@ -324,8 +324,7 @@
 	}
 }
 
-#if defined(CONFIG_UBIATTACH)
-static void scan_ubi_partitions(int mtd)
+void scan_ubi_partitions(int mtd)
 {
 	struct flash_description *flash = get_flash_info();
 	libubi_t libubi = flash->libubi;
@@ -384,7 +383,6 @@
 
 	scan_ubi_volumes(mtd_info);
 }
-#endif
 #endif
 
 int scan_mtd_devices (void)
--- a/handlers/ubivol_handler.c	2021-12-08 09:17:17.000000000 
+++ b/handlers/ubivol_handler.c	2022-03-28 10:29:02.000000000 
@@ -230,6 +230,7 @@
 	int mtdnum, req_vol_type;
 	char node[64];
 	int err;
+	int dev_num;
 	struct flash_description *flash = get_flash_info();
 
 	/* determine the requested volume type */
@@ -251,6 +252,15 @@
 		ERROR("%s does not exist: partitioning not possible",
 			cfg->device);
 		return -ENODEV;
+	}
+
+	/* Check if UBI device is attached, and if not attach it */
+	if (mtd_num2ubi_dev(nandubi->libubi, mtdnum, &dev_num)) {
+		scan_ubi_partitions(mtdnum);
+		if (mtd_num2ubi_dev(nandubi->libubi, mtdnum, &dev_num)) {
+			ERROR("UBI device on MTD%d not found", mtdnum);
+			return -1;
+		}
 	}
 
 	mtd_info = &nandubi->mtd_info[mtdnum];
--- a/include/flash.h	2021-12-08 09:17:17.000000000 
+++ b/include/flash.h	2022-03-28 10:06:05.000000000 
@@ -48,6 +48,7 @@
 void mtd_set_ubiblacklist(char *mtdlist);
 void ubi_init(void);
 int scan_mtd_devices (void);
+void scan_ubi_partitions(int mtd);
 void mtd_cleanup (void);
 int get_mtd_from_device(char *s);
 int get_mtd_from_name(const char *s);
