#!/bin/sh

# Copyright (c) 2020, Laird Connectivity
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.
#
# contact: support@lairdconnect.com

# fips-set - set different fips mode

# verify openssl-3 fips module
openssl3_fipsinit() {
	openssl fipsinstall -in /etc/ssl/fipsmodule.cnf \
			-module /usr/lib/ossl-modules/fips.so \
			-self_test_onload -verify -quiet
	if [ $? -ne 0 ]; then
		echo "ERROR: openssl-3 fips module verification failed"
		return 1
	fi
	return 0
}

openssl_fipsinit() {
	if [ -f /usr/lib/libcrypto.so.3 ]; then
		openssl3_fipsinit
	else
		# no installation required
		return 0
	fi
}

warning() {
  echo "Changes will take effect after reboot"
}

case "${1}" in
  fips) ## set fips only
    openssl_fipsinit || return 1
    fw_setenv fips_wifi  || return 1
    fw_setenv fips 1
    warning
    ;;

  fips_wifi) ## set fips wifi
    openssl_fipsinit || return 1
    fw_setenv fips 1  || return 1
    fw_setenv fips_wifi 1
    warning
    ;;

  unset) ## unset
    fw_setenv fips || return 1
    fw_setenv fips_wifi
    warning
    ;;

  status) ## status
    [ -f /proc/sys/crypto/fips_enabled ] && \
    [ -f /proc/sys/crypto/fips_wifi_enabled ] || \
    { echo "none"; return; }

    read -r fips_value < /proc/sys/crypto/fips_enabled
    read -r fips_wifi_value < /proc/sys/crypto/fips_wifi_enabled

    if [ "${fips_value}" = 1 ] && [ "${fips_wifi_value}" = 1 ]; then
      echo "fips_wifi"
    elif [ "${fips_value}" = 1 ]; then
      echo "fips"
    elif [ "${fips_value}" = 0 ];  then
      echo "unset"
    else
      echo "unknown"
    fi
    ;;

  *)
    echo "Usage: fips-set <fips | fips_wifi | unset | status>"
    ;;
esac
