--- a/src/dhcp.c	2020-12-07 20:47:19.000000000
+++ b/src/dhcp.c	2020-12-06 12:09:35.000000000
@@ -4204,13 +4204,15 @@

 	eloop_timeout_delete(ifp->ctx->eloop, dhcp_start1, ifp);

-	if (state != NULL && state->added) {
-		rt_build(ifp->ctx, AF_INET);
-#ifdef ARP
-		if (ifp->options->options & DHCPCD_ARP)
-			arp_announceaddr(ifp->ctx, &state->addr->addr);
-#endif
-	}
+/*
+	if (state != NULL && state->added) {
+		rt_build(ifp->ctx, AF_INET);
+#ifdef ARP
+		if (ifp->options->options & DHCPCD_ARP)
+			arp_announceaddr(ifp->ctx, &state->addr->addr);
+#endif
+	}
+*/
 }

 struct ipv4_addr *
--- a/src/dhcpcd.c	2020-11-28 09:12:59.000000000
+++ b/src/dhcpcd.c	2020-12-07 20:49:59.000000000
@@ -708,6 +708,22 @@
 			return;
 		loginfox("%s: carrier lost", ifp->name);
 		script_runreason(ifp, "NOCARRIER");
+
+		if (ifp->flags & IFF_UP && ifp->wireless &&
+			if_lowerup(ifp, NULL) == LINK_UP)
+		{
+#ifdef ARP
+			arp_drop(ifp);
+#endif
+#ifdef INET
+			dhcp_abort(ifp);
+#endif
+#ifdef DHCP6
+			dhcp6_abort(ifp);
+#endif
+			return;
+		}
+
 #ifdef NOCARRIER_PRESERVE_IP
 		if (ifp->flags & IFF_UP &&
 		    !(ifp->options->options & DHCPCD_ANONYMOUS))
@@ -774,9 +791,7 @@
 		    memcmp(ifp->ssid, ossid, ifp->ssid_len)) && ifp->active)
 		{
 			dhcpcd_reportssid(ifp);
-#ifdef NOCARRIER_PRESERVE_IP
 			dhcpcd_drop(ifp, 0);
-#endif
 #ifdef IPV4LL
 			ipv4ll_reset(ifp);
 #endif
@@ -789,11 +804,9 @@
 	dhcpcd_initstate(ifp, 0);
 	script_runreason(ifp, "CARRIER");
 #ifdef INET6
-#ifdef NOCARRIER_PRESERVE_IP
 	/* Set any IPv6 Routers we remembered to expire faster than they
 	 * would normally as we maybe on a new network. */
 	ipv6nd_startexpire(ifp);
-#endif
 #ifdef IPV6_MANAGETEMPADDR
 	/* RFC4941 Section 3.5 */
 	ipv6_regentempaddrs(ifp);
--- a/src/if.h	2020-11-28 09:12:59.000000000
+++ b/src/if.h	2020-12-07 18:40:28.000000000
@@ -161,6 +161,7 @@
 #define if_getmtu(ifp) if_domtu((ifp), 0)
 #define if_setmtu(ifp, mtu) if_domtu((ifp), (mtu))
 int if_carrier(struct interface *, const void *);
+int if_lowerup(struct interface *, const void *);

 #ifdef ALIAS_ADDR
 int if_makealias(char *, size_t, const char *, int);
--- a/src/if-linux.c	2020-11-28 09:12:59.000000000
+++ b/src/if-linux.c	2020-12-07 20:53:00.000000000
@@ -516,6 +516,12 @@
 }

 int
+if_lowerup(struct interface *ifp, __unused const void *ifadata)
+{
+	return ifp->flags & IFF_LOWER_UP ? LINK_UP : LINK_DOWN;
+}
+
+int
 if_getnetlink(struct dhcpcd_ctx *ctx, struct iovec *iov, int fd, int flags,
     int (*cb)(struct dhcpcd_ctx *, void *, struct nlmsghdr *), void *cbarg)
 {
